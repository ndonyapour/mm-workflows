steps:
- id: extract_data_csv
  in:
    input_csv_path: !ii /home/donyapourn2/projects/wic/HeliosAPI/sod1_plates/sod1_platemap_cleaned_chunk1.csv
    max_row: !ii 102 # Use 1 for CI
    column_name: !ii "smilesIso"
    output_txt_path: !ii smiles.txt
  out:
  - output_txt_path: !& smiles.txt

- id: load_data
  in:
    input_file: !* smiles.txt
  out:
  - smiles: !& smiles
  
- id: generate_conformers_obabel
  scatter: [smiles]
  in:
    smiles: !* smiles
    output_sdf_path: !ii mol.sdf
    num_conformers: !ii 5 # generates 5 conformers for each smiles and selects the best one
    num_steps : !ii 100
  out:
  -  output_sdf_path: !& mol.sdf

- id: download_pdb.wic
  in:
    pdb_id: !ii 3CQP # 3CQP Human SOD1 G85R Variant  # SOD1: 2C9V  # FUS: 4FDD 

- id: pdb_fixer
  in:
    input_pdb_path: !* protein.pdb
    output_pdb_path: !ii protein_pdbfixer.pdb
    add_atoms: !ii heavy
    add_residues: !ii True
    keep_heterogens: !ii none
  out:
  - output_pdb_path: !& protein_pdbfixer.pdb

- id: fix_amides
  in:
    input_pdb_path: !* protein_pdbfixer.pdb
    output_pdb_path: !ii protein_fix_amides.pdb
  out:
  - output_pdb_path: !& protein_fix_amides.pdb

- id: diffdock # Runs the DiffDock model that does not use hydrogen atoms
  scatter: [ligand_path]
  scatterMethod: dotproduct
  in:
    protein_path: !* protein_fix_amides.pdb
    ligand_path: !* mol.sdf
    samples_per_complex: !ii 10
    inference_steps: !ii 10 
  out:
  - output_files: !& diffdock_poses

- id: rank_diffdock_poses
  scatter: [diffdock_poses]
  in:
    top_n_confident: !ii 1 # if only using top_percent_confidence, then set top_n_confident to trivially high number
    # if only want to use top_n_confident, then set top_percent_confidence to 100
    top_percent_confidence: !ii 100 # take top third of most confident poses, see figure 3 right in DiffDock paper
    diffdock_poses: !* diffdock_poses
  out:
  - output_poses: !& output_poses

- id: pose_cluster_filter
  scatter: [predicted_poses]
  in:
    predicted_poses: !* output_poses
    centroid_cutoff: !ii 5 # if centroid of all poses are within cutoff then only keep most confident pose, requires visual inspection
  out:
  - filtered_poses: !& filtered_poses_2D

- id: flatten_2D_sdf
  in: 
    input_sdf_files: !* filtered_poses_2D
  out:
  - output_sdf_files: !& filtered_poses_1D

- id: convert_pdb
  scatter: [input_path]
  in:
    input_path: !* filtered_poses_1D
    output_pdb_path: !ii ligand.pdb
  out:
  - output_pdb_path: !& ligand.pdb

- id: rename_residues_pdb
  scatter: [input_path]
  in:
    input_path: !* ligand.pdb
    output_path: !ii ligand_pose.pdb
    residue_name: !ii LIG # Note, the residue name should be three characters
    # See: https://www.cgl.ucsf.edu/chimera/1.4/docs/UsersGuide/tutorials/pdbintro.html
    line_start_column_idxs: !ii '{"ATOM": 3, "HETATM": 3, "TER": 2}'
  out:
  - output_path: !& ligand_pose.pdb

- id: combine_pdb
  scatter: [input_structure2]
  in:
    input_structure1: !* protein_fix_amides.pdb
    input_structure2: !* ligand_pose.pdb
    output_structure_path: !ii complex_pdb.pdb
  out:
  - output_structure_path: !& complex_pdb.pdb

- id: divide_chunks
  in:
    input_pdb_paths: !* complex_pdb.pdb
    chunk_size: !ii 100
  out:
  - output_pdb_paths: !& complex_structure.pdb

- id: onionnet_featurize
  scatter: [pdb_paths]
  in:
    pdb_paths: !* complex_structure.pdb
    output_feature_file: !ii output_features.csv
  out:
  - output_feature_file: !& output_features.csv

- id: onionnet_score
  scatter: [input_feature_file]
  in:
    input_feature_file: !* output_features.csv
    output_score_file: !ii predicted_pKa.csv
    onionnet_score: !ii onionnet_score
  out:
  - output_score_file: !& predicted_pKa.csv
  #- onionnet_score: !& onionnet_score

- id: load_onionnet_score
  in:
    input_score_files: !* predicted_pKa.csv
  out:
  - dG_values: !& onionnet_score

- id: extract_smiles_sdf
  scatter: [sdf_file_path]
  in:
    sdf_file_path: !* filtered_poses_1D
  out:
  - output_smiles: !& docked_sdf_smiles

- id: success_inspector
  in:
    input_smiles: !* smiles
    output_smiles: !* docked_sdf_smiles
    dG_values: !* onionnet_score
    output_txt_path: !ii results.txt
  out:
  - output_txt_path: !& results.txt

# - id: visualize_protein_ligands
#   scatter: [sdf_file_paths]
#   in:
#     pdb_file_path: !* protein_fix_amides.pdb
#     sdf_file_paths: !* filtered_poses_2D
#     output_html_path: !ii vis_poses.html
#   out:
#   - output_html_path: !& vis_poses.html

wic:
  graphviz:
    label: Virtual Screening Workflow
  steps:
    (1, extract_data_csv):
      wic:
        graphviz:
          label: Extract Protease Compounds' SMILES
    (2, load_data):
      wic:
        graphviz:
          label: Load Extracted SMILES
    (3, generate_conformers_obabel):
      wic:
        graphviz:
          label: Generate Conformers from SMILES
    (4, download_pdb.wic):
      wic:
        graphviz:
          label: Download PDB File
    (5, pdb_fixer):
      wic:
        graphviz:
          label: Fix Protein PDB Structure
    (6, fix_amides):
      wic:
        graphviz:
          label: Fix Protein Amides
    (7, diffdock):
      wic:
        namespace: gpu
        graphviz:
          label: Run DiffDock for Ligand-Protein Docking
    (8, rank_diffdock_poses):
      wic:
        graphviz:
          label: Rank Docking Poses
    (9, pose_cluster_filter):
      wic:
        graphviz:
          label: Filter Poses via Clustering
    (10, flatten_2D_sdf):
      wic:
        graphviz:
          label: Flatten Poses to 1D SDF
    (11, convert_pdb):
      wic:
        graphviz:
          label: Convert SDF to PDB Format
    (12, rename_residues_pdb):
      wic:
        graphviz:
          label: Rename Ligand Residues
    (13, combine_pdb):
      wic:
        graphviz:
          label: Combine Protein and Ligand PDB
    (14, onionnet_featurize):
      wic:
        graphviz:
          label: Featurize Complex with OnionNet
    (15, onionnet_score):
      wic:
        graphviz:
          label: Predict OnionNet Scores
    (16, load_onionnet_score):
      wic:
        graphviz:
          label: Load OnionNet Scores
    (17, extract_smiles_sdf):
      wic:
        graphviz:
          label: Extract SMILES from Docked SDF
    (18, success_inspector):
      wic:
        graphviz:
          label: Inspect Docking Results
    # (19, visualize_protein_ligands):
    #   wic:
    #     graphviz:
    #       label: Visualize Protein-Ligand Complexes


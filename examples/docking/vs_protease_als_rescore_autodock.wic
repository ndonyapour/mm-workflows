steps:
- id: extract_data_csv
  in:
    input_csv_path: !ii /polus2/donyapourn2/projects/drugbank/databases/compound_libaries/ProteaseInhibitorCompounds_Cleaned.csv
    max_row: !ii 2 # Use 1 for CI
    column_name: !ii "Smiles"
    output_txt_path: !ii smiles.txt
  out:
  - output_data: !& smiles

- id: generate_conformers_obabel
  scatter: [smiles]
  in:
    smiles: !* smiles
    output_sdf_path: !ii mol.sdf
    num_conformers: !ii 5 # generates 5 conformers for each smiles and selects the best one
    num_steps : !ii 100
  out:
  -  output_sdf_path: !& mol.sdf

- id: download_pdb.wic
  in:
    pdb_id: !ii 4FDD  # SOD1: 2C9V  # FUS: 4FDD 

- id: pdb_fixer
  in:
    input_pdb_path: !* protein.pdb
    output_pdb_path: !ii protein_pdbfixer.pdb
    add_atoms: !ii heavy
    add_residues: !ii True
    keep_heterogens: !ii none
  out:
  - output_pdb_path: !& protein_pdbfixer.pdb

- id: fix_amides
  in:
    input_pdb_path: !* protein_pdbfixer.pdb
    output_pdb_path: !ii protein_fix_amides.pdb
  out:
  - output_pdb_path: !& protein_fix_amides.pdb

- id: diffdock # Runs the DiffDock model that does not use hydrogen atoms
  scatter: [ligand_path]
  scatterMethod: dotproduct
  in:
    protein_path: !* protein_fix_amides.pdb
    ligand_path: !* mol.sdf
    samples_per_complex: !ii 10
    inference_steps: !ii 10 
  out:
  - output_files: !& diffdock_poses

- id: rank_diffdock_poses
  scatter: [diffdock_poses]
  in:
    top_n_confident: !ii 1000 # if only using top_percent_confidence, then set top_n_confident to trivially high number
    # if only want to use top_n_confident, then set top_percent_confidence to 100
    top_percent_confidence: !ii 33 # take top third of most confident poses, see figure 3 right in DiffDock paper
    diffdock_poses: !* diffdock_poses
  out:
  - output_poses: !& output_poses

- id: pose_cluster_filter
  scatter: [predicted_poses]
  in:
    predicted_poses: !* output_poses
    centroid_cutoff: !ii 5 # if centroid of all poses are within cutoff then only keep most confident pose, requires visual inspection
  out:
  - filtered_poses: !& filtered_poses_2D

- id: flatten_2D_sdf
  in: 
    input_sdf_files: !* filtered_poses_2D
  out:
  - output_sdf_files: !& filtered_poses_1D

# assign partial charges (ligand)
- id: convert_pdbqt.wic
  scatter: [input_sdf_path]
  in:
    # NOTE: input_pdb_path and input_sdf_path are currently only necessary
    # due to a limitation of the inlineing implementation.
    input_pdb_path: !* protein_fix_amides.pdb
    input_sdf_path: !* filtered_poses_1D

# rescore protein ligand complexes
- id: autodock_vina_rescore
  scatter: [input_ligand_pdbqt_path, input_receptor_pdbqt_path]
  scatterMethod: dotproduct
  in:
    input_ligand_pdbqt_path: !* mol_prod.pdbqt
    input_receptor_pdbqt_path: !* receptor_prod.pdbqt
    score_only: !ii True
  out:
  - output_log_path: !& vina_rescore_pdbind.log
  - docking_score: !& rescoring_scores
  - output_ligand_pdbqt_path: !& ligand_rescore.pdbqt

- id: duplicate
  in:
    input_pdbqt_singleton_path: !* protein_fix_amides.pdb
    input_pdbqt_array_path: !* ligand_rescore.pdbqt
  scatter: [input_pdbqt_array_path]
  out:
  - output_pdbqt_path: !& receptor_dup_2D.pdb

- id: autodock_vina_filter
  in:
    input_log_paths: !* vina_rescore_pdbind.log
    docking_score_cutoff: !ii 100 # set to a big number to get all the generated poses
    max_num_poses_per_ligand: !ii 1
    rescore: !ii True
    input_ligand_pdbqt_path: !* ligand_rescore.pdbqt
    input_receptor_pdbqt_path: !* receptor_dup_2D.pdb
  out:
  - output_ligand_pdbqt_path: !& ligand_filter.pdbqt
  - output_receptor_pdbqt_path: !& receptor_filter.pdb
  - docking_scores: !& docking_scores

- id: convert_pdb
  scatter: [input_path]
  in:
    input_path: !* ligand_filter.pdbqt
    output_pdb_path: !ii ligand_pose.pdb
  out:
  - output_pdb_path: !& ligand_pose.pdb

- id: combine_pdb
  scatter: [input_structure2]
  in:
    input_structure1: !* protein_fix_amides.pdb
    input_structure2: !* ligand_pose.pdb
    output_structure_path: !ii complex_pdb.pdb
  out:
  - output_structure_path: !& complex_pdb.pdb

- id: extract_smiles_sdf
  scatter: [sdf_file_path]
  in:
    sdf_file_path: !* filtered_poses_1D
  out:
  - output_smiles: !& docked_sdf_smiles

- id: success_inspector
  in:
    input_smiles: !* smiles
    output_smiles: !* docked_sdf_smiles
    output_txt_path: !ii results.txt
  out:
  - output_txt_path: !& results.txt

- id: visualize_protein_ligands
  scatter: [sdf_file_paths]
  in:
    pdb_file_path: !* protein_fix_amides.pdb
    sdf_file_paths: !* filtered_poses_2D
    output_html_path: !ii vis_poses.html
  out:
  - output_html_path: !& vis_poses.html

wic:
  graphviz:
    label: Virtual Screening 
  steps:
    (1, extract_data_csv):
      wic:
        graphviz:
          label: Extract Protease Compounds' SMILES
    (2, generate_conformers_obabel):
      wic:
        graphviz:
          label: Generate Conformers from SMILES
    (3, download_pdb.wic):
      wic:
        graphviz:
          label: Setup PDB
    (4, pdb_fixer):
      wic:
        graphviz:
          label: Fix Protein PDB Structure
    (5, fix_amides):
      wic:
        graphviz:
          label: Fix Protein Amides
    (6, diffdock):
      wic:
        namespace: gpu
        graphviz:
          label: Run DiffDock for Ligand-Protein Docking
    (7, rank_diffdock_poses):
      wic:
        graphviz:
          label: Rank Docking Poses
    (8, pose_cluster_filter):
      wic:
        graphviz:
          label: Filter Poses via Clustering
    (9, flatten_2D_sdf):
      wic:
        graphviz:
          label: Flatten Poses to 1D SDF
    (10, convert_pdbqt.wic):
      wic:
        inlineable: False
    (11, autodock_vina_rescore.wic):
      wic:
        inlineable: False
    (12, duplicate):
      wic:
        graphviz:
          label: Duplicate Receptor PDB
    (13, autodock_vina_filter):
      wic:
        graphviz:
          label: Apply Docking\nScore Cutoff
    (14, convert_pdb):
      wic:
        graphviz:
          label: Convert SDF to PDB Format
    (15, combine_pdb):
      wic:
        graphviz:
          label: Combine Protein and Ligand PDB
    (16, extract_smiles_sdf):
      wic:
        graphviz:
          label: Extract SMILES from SDF
    (17, success_inspector):
      wic:
        graphviz:
          label: Generate Docking Results
    (18, visualize_protein_ligands):
      wic:
        graphviz:
          label: Visualize Protein-Ligand Complexes in HTML

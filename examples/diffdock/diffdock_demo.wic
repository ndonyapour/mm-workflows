steps:
- id: pdb
  in:
    config: !ii
      pdb_code: 6AGT
    output_pdb_path: !ii protein.pdb
  out:
  - output_pdb_path: !& protein.pdb

- id: generate_conformers_obabel
  scatter: [smiles]
  in:
    smiles: !ii ['C1=CC2=CC=C3C=CC=NC3=C2N=C1'] #,'CC(=O)NCCC1=C[NH]C2=C1C=C(O)C=C2,NCCCCNC(N)=N','NC(=O)C1=CC=CC=C1,OC(=O)CC1=CC(=C(O)C=C1)O']
    output_sdf_path: !ii mol.sdf
    num_conformers: !ii 5 # generates 5 conformers for each smiles and selects the best one
    num_steps : !ii 100
  out:
  -  output_sdf_path: !& mol.sdf

- id: sanitize_ligand
  scatter: [input_small_mol_ligand]
  in:
    input_small_mol_ligand: !* mol.sdf
  out:
  - output_ligand: !& sanitized_sdfs
  - valid_ligand: !& valid_ligands

- id: diffdock
  scatter: [ligand_path]
  in:
    protein_path: !* protein.pdb
    ligand_path: !* sanitized_sdfs
    samples_per_complex: !ii 20 # figure 3 left in DiffDock paper
    inference_steps: !ii 20 # figure S11 in DiffDock paper
  out:
  - output_files: !& diffdock_poses

- id: rank_diffdock_poses
  scatter: [diffdock_poses]
  in:
    top_n_confident: !ii 1000 # if only using top_percent_confidence, then set top_n_confident to trivially high number
    # if only want to use top_n_confident, then set top_percent_confidence to 100
    top_percent_confidence: !ii 33 # take top third of most confident poses, see figure 3 right in DiffDock paper
    diffdock_poses: !* diffdock_poses
  out:
  - output_poses: !& output_poses

- id: pose_cluster_filter
  scatter: [predicted_poses]
  in:
    predicted_poses: !* output_poses
    centroid_cutoff: !ii 5 # if centroid of all poses are within cutoff then only keep most confident pose, requires visual inspection

